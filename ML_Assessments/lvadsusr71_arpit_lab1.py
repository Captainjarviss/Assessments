# -*- coding: utf-8 -*-
"""LVADSUSR71_Arpit_LAB1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YAZ6R4HdqXUwiE_o8lNxjHgOJRMzni61
"""

#q1
import pandas as pd
df=pd.read_csv('/content/sample_data/expenses.csv')
df.info()

#checking null values
df.isnull().sum()

#checking outliers
import seaborn as sns
sns.boxplot(df)

#removing the outliers from the dataset
from scipy import stats

z_scores = stats.zscore(df[['age', 'bmi', 'charges']])
abs_z_scores = abs(z_scores)
outliers = (abs_z_scores > 3).any(axis=1)

df = df[~outliers]

#now check using the boxplot and scatterplot

sns.boxplot(df)

sns.scatterplot(df['charges'])

#encoding categorical data
from sklearn.preprocessing import LabelEncoder

cat_features = df.select_dtypes(include=['object'])

enc = LabelEncoder()

for col in cat_features.columns:
  df[col] = enc.fit_transform(df[col])

df.head()

#feature selection and data cleaning
# we need to see the correlation between the features
df.corr()
sns.pairplot(df)
df = df.drop_duplicates() #removing duplicates

#as we can see that only age,bmi,smoker and children are seeing correlated with the charges attibute so we take these as an independent features
X = df[['age','bmi','children','smoker']]
y = df['charges']

#data splitting

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(X,y, test_size = 0.3, random_state=10)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)

#model development and training
from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X_train, y_train)
print("coefficient or slope:",model.coef_)
print("Intercept: ",model.intercept_)
y_pred = model.predict(X_test)
y_pred
from sklearn.metrics import mean_squared_error, r2_score
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)
import numpy as np

