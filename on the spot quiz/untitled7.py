# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xeOenzI2sHF2kPez-cVG3a6Toxg_MWOc
"""

import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

var_train = pd.read_csv('/content/DSAILVA-TRAIN Data - Wheat.csv')


var_test = pd.read_csv('/content/DSAILVA-TEST Data - Wheat.csv')
var_train.head(),var_test.head()

var_X_train = var_train[['Length of kernel', 'Width of kernel']]
var_X_test = var_test[['Length of kernel', 'Width of kernel']]
var_X_train,var_X_test

wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=0)
    kmeans.fit(var_X_train)
    wcss.append(kmeans.inertia_)

plt.figure(figsize=(10, 5))
plt.plot(range(1, 11), wcss)
plt.title('Elbow Method for Determining Optimal K')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.xticks(range(1, 11))
plt.grid(True)
plt.show()

optimal_k = 3


kmeans = KMeans(n_clusters=optimal_k, init='k-means++', max_iter=300, n_init=10, random_state=0)
var_train_df['Cluster'] = kmeans.fit_predict(var_X_train)
var_test_df['Cluster'] = kmeans.predict(var_X_test)


def plot_clusters(df, title):
    plt.figure(figsize=(12, 7))
    colors = ['red', 'blue', 'green']
    for i in range(optimal_k):
        plt.scatter(df[df['Cluster'] == i]['Length of kernel'],
                    df[df['Cluster'] == i]['Width of kernel'],
                    s=100, c=colors[i], label=f'Cluster {i+1}')
    plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1],
                s=300, c='yellow', label='Centroids', marker='X')
    plt.title(title)
    plt.xlabel('Length of Kernel')
    plt.ylabel('Width of Kernel')
    plt.legend()
    plt.show()


plot_clusters(var_train_df, 'Clusters of Wheat Varieties (Training Data)')


plot_clusters(test_df, 'Clusters of Wheat Varieties (Test Data)')

